    
    

<?xml version="1.0" encoding="utf-8"?>
<!-- generator="FeedCreator 1.7.2-ppt DokuWiki" -->
<?xml-stylesheet href="http://ocw.cs.pub.ro/courses/lib/exe/css.php?s=feed" type="text/css"?>
<rdf:RDF
    xmlns="http://purl.org/rss/1.0/"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel rdf:about="http://ocw.cs.pub.ro/courses/feed.php">
        <title>CS Open CourseWare iotcluj:labs</title>
        <description></description>
        <link>http://ocw.cs.pub.ro/courses/</link>
        <image rdf:resource="http://ocw.cs.pub.ro/courses/lib/tpl/arctic/images/favicon.ico" />
       <dc:date>2016-11-23T13:39:53+02:00</dc:date>
        <items>
            <rdf:Seq>
                <rdf:li rdf:resource="http://ocw.cs.pub.ro/courses/iotcluj/labs/01?rev=1468323583&amp;do=diff"/>
                <rdf:li rdf:resource="http://ocw.cs.pub.ro/courses/iotcluj/labs/02?rev=1468323603&amp;do=diff"/>
                <rdf:li rdf:resource="http://ocw.cs.pub.ro/courses/iotcluj/labs/03?rev=1468322929&amp;do=diff"/>
                <rdf:li rdf:resource="http://ocw.cs.pub.ro/courses/iotcluj/labs/04?rev=1468329448&amp;do=diff"/>
                <rdf:li rdf:resource="http://ocw.cs.pub.ro/courses/iotcluj/labs/05?rev=1468402382&amp;do=diff"/>
                <rdf:li rdf:resource="http://ocw.cs.pub.ro/courses/iotcluj/labs/06?rev=1468411183&amp;do=diff"/>
                <rdf:li rdf:resource="http://ocw.cs.pub.ro/courses/iotcluj/labs/07?rev=1468489341&amp;do=diff"/>
            </rdf:Seq>
        </items>
    </channel>
    <image rdf:about="http://ocw.cs.pub.ro/courses/lib/tpl/arctic/images/favicon.ico">
        <title>CS Open CourseWare</title>
        <link>http://ocw.cs.pub.ro/courses/</link>
        <url>http://ocw.cs.pub.ro/courses/lib/tpl/arctic/images/favicon.ico</url>
    </image>
    <item rdf:about="http://ocw.cs.pub.ro/courses/iotcluj/labs/01?rev=1468323583&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-07-12T14:39:43+02:00</dc:date>
        <title>Lab 1: Raspberry Pi Setup</title>
        <link>http://ocw.cs.pub.ro/courses/iotcluj/labs/01?rev=1468323583&amp;do=diff</link>
        <description>Lab 1: Raspberry Pi Setup

Raspberry Pi 3

The Raspberry Pi is a very small computer that has the characteristics of the computers people would use 15 years ago.
Raspberry Pi 3 characteristics:

	*  Broadcom BCM2837 SoC (4 ARM Cortex-A53);
	*  GB of RAM;
	*  integrated WiFi and BLE;
	*  HDMI port, an Ethernet port and four USB ports;
	*  several pins to use for electronics:
		*  two 5V pins;
		*  two 3.3V pins;
		*  8 ground pins;
		*  26 data pins;
		*  1 PWM pin.</description>
    </item>
    <item rdf:about="http://ocw.cs.pub.ro/courses/iotcluj/labs/02?rev=1468323603&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-07-12T14:40:03+02:00</dc:date>
        <title>Lab 2: Linux</title>
        <link>http://ocw.cs.pub.ro/courses/iotcluj/labs/02?rev=1468323603&amp;do=diff</link>
        <description>Embeded boards run Linux, this is why when interracting with them you might need some basic notions concerning this operating system in case you haven't come across it so far. 

The Shell

The Shell is a window that allows you to interact with the board. It waits for you to enter a command and it executes it. Once you open a Shell, you will see the prompt. That means everything works fine and the Shell is waiting for your command.</description>
    </item>
    <item rdf:about="http://ocw.cs.pub.ro/courses/iotcluj/labs/03?rev=1468322929&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-07-12T14:28:49+02:00</dc:date>
        <title>Lab 3: Light Blink</title>
        <link>http://ocw.cs.pub.ro/courses/iotcluj/labs/03?rev=1468322929&amp;do=diff</link>
        <description>What you need

	*  One Raspberry Pi connected to Wyliodrin STUDIO;
	*  One LED;
	*  One 220 Ohm resistor;
	*  Jumper wires;
	*  Breadboard;

 


The Setup

Connect the LED to the Raspberry Pi following the schematics in the figure.

First of all, you need to distinguish the anode from the cathode. The LED has two legs: one is longer, that one is usually the anode and the shorter one is the cathode. Another way of identifying them is by looking inside the LED. There are two metal parts in it. The…</description>
    </item>
    <item rdf:about="http://ocw.cs.pub.ro/courses/iotcluj/labs/04?rev=1468329448&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-07-12T16:17:28+02:00</dc:date>
        <title>Lab 4: Programming with Streams</title>
        <link>http://ocw.cs.pub.ro/courses/iotcluj/labs/04?rev=1468329448&amp;do=diff</link>
        <description>Traffic Lights

What you need

	*  One Raspberry Pi connected to Wyliodrin STUDIO;
	*  Five LEDs;
	*  One button;
	*  Six 200 Ohms resistors;
	*  Jumper wires;
	*  Breadboard.

The Setup

Connect the LEDs and the button to the Raspberry Pi following the schematics in the figure.

The button is connected in a voltage divider circuit. You can notice that the button has 4 legs. Usually, one leg from one side is connected to the one in front of it. However, there might be the case that the legs care…</description>
    </item>
    <item rdf:about="http://ocw.cs.pub.ro/courses/iotcluj/labs/05?rev=1468402382&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-07-13T12:33:02+02:00</dc:date>
        <title>Lab 5: Sensors and Dashboard</title>
        <link>http://ocw.cs.pub.ro/courses/iotcluj/labs/05?rev=1468402382&amp;do=diff</link>
        <description>For the following applications, you will read data coming from sensors, which means that you will also need to use the Arduino board. As the Raspberry Pi has no ADCs, you cannot read values coming from analog sensors. 

Arduino Setup

What you need

	*  One Raspberry Pi board connected to Wyliodrin STUDIO;
	*  One Arduino board;
	*  One USB cable.</description>
    </item>
    <item rdf:about="http://ocw.cs.pub.ro/courses/iotcluj/labs/06?rev=1468411183&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-07-13T14:59:43+02:00</dc:date>
        <title>Lab 6: Connect and use an LCD</title>
        <link>http://ocw.cs.pub.ro/courses/iotcluj/labs/06?rev=1468411183&amp;do=diff</link>
        <description>In this project you are going to connect an LCD to your board and write a short message on it.

What you need

	*   One Raspberry Pi connected to Wyliodrin STUDIO;
	*   One 16×2 LCD;
	*   One breadboard;
	*  Jumper wires;

The Setup


The LCD in the kit is connected to a port expander (MCP23008). This allows the LCD to be controlled via the I2C protocol, thus reducing the number of pins you need to connect the LCD to. In this case, you just need to connect the expander to GND, 5V, SCL and SDA pi…</description>
    </item>
    <item rdf:about="http://ocw.cs.pub.ro/courses/iotcluj/labs/07?rev=1468489341&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-07-14T12:42:21+02:00</dc:date>
        <title>Lab 7: Web server</title>
        <link>http://ocw.cs.pub.ro/courses/iotcluj/labs/07?rev=1468489341&amp;do=diff</link>
        <description>Request data from a web page

Remember using a web service. When you make a request to the server, you need to show it the method, meaning what you expect it to do, which, in the case where you want data to be drown from the web by the server, would be get. Next, you need to tell the server where to get this data from. Any query has the following structure: &lt;http://address:[port]URL?querystring&gt;. Through this query the server will find the data you want and send it back to your browser.</description>
    </item>
</rdf:RDF>
