    
    

#ifndef __STACK__H
#define __STACK__H

// Primul argument al template-ului este tipul de date T
// Al doilea argument este dimensiunea maxim a stivei N
template<typename T, int N>
class Stack {
	public:
		// constructor
		Stack() {
			// TODO: initializari
		}

		// destructor
		~Stack() {
			// TODO: eliberare resurse, daca este cazul
		}

		// operator de adaugare
		void push(T x) {
			// TODO: verificari, implementare
		}

		// operatorul de stergere
		T pop() {
			// TODO: verificari, implementare
		}

		// operatorul de consultare
		T peek() {
			// TODO: verificari, implementare
		}

		// operatorul de verificare dimensiune
		int isEmpty() {
			// TODO: implementare
		}

	private:
		// vectorul de stocare
		T stackArray[N];

		// pozitia in vector a varfului stivei
		int topLevel;
};

#endif // __STACK__H