    
    

<?xml version="1.0" encoding="utf-8"?>
<!-- generator="FeedCreator 1.7.2-ppt DokuWiki" -->
<?xml-stylesheet href="http://ocw.cs.pub.ro/courses/lib/exe/css.php?s=feed" type="text/css"?>
<rdf:RDF
    xmlns="http://purl.org/rss/1.0/"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel rdf:about="http://ocw.cs.pub.ro/courses/feed.php">
        <title>CS Open CourseWare iocla:laboratoare</title>
        <description></description>
        <link>http://ocw.cs.pub.ro/courses/</link>
        <image rdf:resource="http://ocw.cs.pub.ro/courses/lib/tpl/arctic/images/favicon.ico" />
       <dc:date>2016-11-23T11:17:20+02:00</dc:date>
        <items>
            <rdf:Seq>
                <rdf:li rdf:resource="http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-01?rev=1475858585&amp;do=diff"/>
                <rdf:li rdf:resource="http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-02?rev=1478442672&amp;do=diff"/>
                <rdf:li rdf:resource="http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-03?rev=1478429791&amp;do=diff"/>
                <rdf:li rdf:resource="http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-04?rev=1477550218&amp;do=diff"/>
                <rdf:li rdf:resource="http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-05?rev=1478427747&amp;do=diff"/>
                <rdf:li rdf:resource="http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-06?rev=1478854106&amp;do=diff"/>
                <rdf:li rdf:resource="http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-07?rev=1479464322&amp;do=diff"/>
                <rdf:li rdf:resource="http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-08?rev=1479889995&amp;do=diff"/>
                <rdf:li rdf:resource="http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-09?rev=1475594225&amp;do=diff"/>
                <rdf:li rdf:resource="http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-10?rev=1475594239&amp;do=diff"/>
                <rdf:li rdf:resource="http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-11?rev=1475594250&amp;do=diff"/>
                <rdf:li rdf:resource="http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-12?rev=1475067785&amp;do=diff"/>
                <rdf:li rdf:resource="http://ocw.cs.pub.ro/courses/iocla/laboratoare/start?rev=1475921386&amp;do=diff"/>
            </rdf:Seq>
        </items>
    </channel>
    <image rdf:about="http://ocw.cs.pub.ro/courses/lib/tpl/arctic/images/favicon.ico">
        <title>CS Open CourseWare</title>
        <link>http://ocw.cs.pub.ro/courses/</link>
        <url>http://ocw.cs.pub.ro/courses/lib/tpl/arctic/images/favicon.ico</url>
    </image>
    <item rdf:about="http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-01?rev=1475858585&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-10-07T19:43:05+02:00</dc:date>
        <title>Laborator 01: Introducere</title>
        <link>http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-01?rev=1475858585&amp;do=diff</link>
        <description>Pentru reprezentarea informațiilor (instrucțiuni și date), calculatoarele folosesc sistemul binar (baza 2). În cazul scrierii programelor în limbaj de asamblare este preferat sistemul hexazecimal (baza 16), pentru că scutește programatorul de scrierea șirurilor lungi de 1 și 0, iar conversia din/în binar se poate face mult mai ușor decât în cazul sistemului zecimal (baza 10).</description>
    </item>
    <item rdf:about="http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-02?rev=1478442672&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-11-06T16:31:12+02:00</dc:date>
        <title>Laborator 02: Toolchain</title>
        <link>http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-02?rev=1478442672&amp;do=diff</link>
        <description>În acest laborator, vom trece prin fiecare nivel de procesare a unui limbaj de nivel înalt și prin toolchain-ul pe care îl vom folosi de acum încolo.

C basics: GOTOs

Un concept mai puțin abordat în tutoriale de C este instrucțiunea goto.
Prin instrucțiunea goto, un program poate sări în puncte intermediare în cadrul unei funcții.
Aceste puncte intermediare se numesc label-uri (etichete).</description>
    </item>
    <item rdf:about="http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-03?rev=1478429791&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-11-06T12:56:31+02:00</dc:date>
        <title>Laborator 03: First baby steps</title>
        <link>http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-03?rev=1478429791&amp;do=diff</link>
        <description>În acest laborator, vom prezenta o parte din instrucțiunile x86, precum și o suită de exemple introductive.

Introducere

Înainte de a începe efectiv să învățăm să citim cod scris în limbaj de asamblare, iar apoi să scriem primele noastre programe, trebuie să răspundem la câteva întrebări.</description>
    </item>
    <item rdf:about="http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-04?rev=1477550218&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-10-27T09:36:58+02:00</dc:date>
        <title>Laborator 04: Rolul registrelor, adresare directă și bazată</title>
        <link>http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-04?rev=1477550218&amp;do=diff</link>
        <description>În acest laborator vom aprofunda lucrul cu registre și modul în care se utilizează memoria atunci când programăm assembly pe un sistem x86 de 32 biți.

Registre

Registrele sunt principalele “unelte” cu care se scriu programele în limbaj de asamblare. Acestea sunt precum variabile construite în procesor. Utilizarea registrelor în locul adresării directe a memoriei face ca dezvoltarea și citirea programelor scrise în assembly să fie mai rapidă și mai ușoara. Singurul dezavantaj al programării în …</description>
    </item>
    <item rdf:about="http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-05?rev=1478427747&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-11-06T12:22:27+02:00</dc:date>
        <title>Laborator 05: Structuri, vectori, explorarea memoriei</title>
        <link>http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-05?rev=1478427747&amp;do=diff</link>
        <description>În acest laborator vom introduce noțiunea de structură din limbajul assembly, vom lucra cu operații specializate pe șiruri și vom vedea câteva avantaje -- legate de securitate și debugging -- a explorării memoriei.

Structuri

Structurile sunt folosite pentru a grupa date care au tipuri diferite, dar care pot fi folosite împreună pentru a crea un tip compus.</description>
    </item>
    <item rdf:about="http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-06?rev=1478854106&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-11-11T10:48:26+02:00</dc:date>
        <title>Laborator 06: Apeluri de funcții</title>
        <link>http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-06?rev=1478854106&amp;do=diff</link>
        <description>În acest laborator vom prezenta modul în care se realizează apeluri de funcții. Vom vedea cum putem folosi instrucțiunile call și ret pentru a realiza apeluri de funcții și cum folosim stiva pentru a transmite parametrii unei funcții.

Laboratorul este de forma learn by doing partea practică alternând între secțiuni de tip tutorial, cu parcurgere pas cu pas și prezentarea soluției, și exerciții care trebuie să fie rezolvate.</description>
    </item>
    <item rdf:about="http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-07?rev=1479464322&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-11-18T12:18:42+02:00</dc:date>
        <title>Laborator 07: Operații pe numere mari</title>
        <link>http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-07?rev=1479464322&amp;do=diff</link>
        <description>Există situații excepționale în care aspecte ale arhitecturii pe care lucrăm devin un impediment. Una dintre aceste situații este când problemele, pe care încercăm să le rezolvăm printr-un program pe calculator, au ca input numere foarte mari care nu pot fi reprezentate pe câte un singur registru. De exemplu pot exista cazuri în care datele citite de la tastatură să nu poată fi reprezentate pe registrele de 32 biți (dacă suntem pe o arhitectură x86) sau pe 64 de biți (dacă suntem pe o arhitectur…</description>
    </item>
    <item rdf:about="http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-08?rev=1479889995&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-11-23T10:33:15+02:00</dc:date>
        <title>Laborator 08: Interfața în linia de comandă, analiza statică și dinamică</title>
        <link>http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-08?rev=1479889995&amp;do=diff</link>
        <description>După un scurt breviar care va explica noțiunile introduse în acest laborator, va urma o parte practică care alternează între secțiuni de tip tutorial, cu parcurgere pas cu pas și prezentarea soluției, și exerciții care trebuie să fie rezolvate.</description>
    </item>
    <item rdf:about="http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-09?rev=1475594225&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-10-04T18:17:05+02:00</dc:date>
        <title>Laborator 09: Gestiunea bufferelor. Buffer overflow</title>
        <link>http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-09?rev=1475594225&amp;do=diff</link>
        <description>Acest laborator este destinat înțelegerii modului în care funcționează bufferele și cum pot fi folosit la nivel de început vulnerabilităti de tip buffer overflow, adică depășirea limitelor unui buffer.

Un buffer este o zonă de memorie definită printr-o adresă de start și o dimensiune. Cel mai adesea un buffer este vector de N elemente. Dimensiunea totală a bufferului este N x dimensiunea unui element. Un șir de caracter (string) este un caz particular de buffer.</description>
    </item>
    <item rdf:about="http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-10?rev=1475594239&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-10-04T18:17:19+02:00</dc:date>
        <title>Laborator 10: Exploatarea memoriei. Shellcodes</title>
        <link>http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-10?rev=1475594239&amp;do=diff</link>
        <description>Ca o continuare a laboratorului precedent, vom merge mai în detaliu cu ce putem face în momentul în care deținem controlul asupra unui buffer într-un program, fără ca acesta să fie protejat de un posibil overflow.

Concepte de bază

Securitatea aplicațiilor este un domeniu ce a căpătat amploare în ultimii ani și considerăm relevantă explorarea istoricului acesteia din punct de vedere practic. Țineți cont de faptul că noțunile pe care le vom acoperi în cadrul laboratorului sunt la nivelul anului …</description>
    </item>
    <item rdf:about="http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-11?rev=1475594250&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-10-04T18:17:30+02:00</dc:date>
        <title>Laborator 11: Interactiunea C-assembly</title>
        <link>http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-11?rev=1475594250&amp;do=diff</link>
        <description>Având în vedere că limbajul de asamblare prezintă dificultăți atât în citirea cât și în dezvoltarea codului, tendința generală este aceea de a se migra către limbaje de nivel înalt (care sunt mult mai ușor de citit și oferă un API mult mai ușor de utilizat). Cu toate acestea, tot există situații în care, din rațiuni de optimizare, se folosesc mici rutine assembly care sunt integrate în modulul limbajului de nivel inalt.</description>
    </item>
    <item rdf:about="http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-12?rev=1475067785&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-09-28T16:03:05+02:00</dc:date>
        <title>Laborator 12: Calcul în virgulă mobilă</title>
        <link>http://ocw.cs.pub.ro/courses/iocla/laboratoare/laborator-12?rev=1475067785&amp;do=diff</link>
        <description>Până acum, pe parcursul laboratorului de IOCLA am învățat despre cum putem efectua operații cu numere întregi, pozitive sau negative, de diverse dimensiuni. Dar cum rămâne cu numerele cu virgulă? Multe din procesoarele folosite astăzi dispun de o unitate de calcul în virgulă mobilă (Floating Point Unit - FPU), care oferă funcții de calcul pentru astfel de valori.</description>
    </item>
    <item rdf:about="http://ocw.cs.pub.ro/courses/iocla/laboratoare/start?rev=1475921386&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2016-10-08T13:09:46+02:00</dc:date>
        <title>Laboratoare</title>
        <link>http://ocw.cs.pub.ro/courses/iocla/laboratoare/start?rev=1475921386&amp;do=diff</link>
        <description>laboratoare index</description>
    </item>
</rdf:RDF>
